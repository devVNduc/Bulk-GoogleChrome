{"version":3,"file":"contentScript.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uFAAuF,oDAAoD;AAC3I;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,UAAU;AAC9B,GAAG;AACH;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,CAAC","sources":["webpack://nodemy-like-toptop/./src/contentScript.js"],"sourcesContent":["'use strict';\n\n// Content script file will run in the context of web page.\n// With content script you can manipulate the web pages using\n// Document Object Model (DOM).\n// You can also pass information to the parent extension.\n\n// We execute this script by making an entry in manifest.json file\n// under `content_scripts` property\n\n// For more information on Content Scripts,\n// See https://developer.chrome.com/extensions/content_scripts\n\n// Log `title` of current active web page\nconst pageTitle = document.head.getElementsByTagName('title')[0].innerHTML;\nconsole.log(\n  `Page TITLE is: '${pageTitle}' - evaluated by Chrome extension's 'contentScript.js' file`\n);\n\n// Communicate with background file by sending a message\nchrome.runtime.sendMessage(\n  {\n    type: 'GREETINGS',\n    payload: {\n      message: 'Hello, my name is Con. I am from ContentScript.',\n    },\n  },\n  (response) => {\n    console.log(response.message);\n  }\n);\n\nconst NODEMY_TIME_WATCH_VIDEO = {\n  min: 2000,\n  max: 3000\n}\nconst SELECTOR_TAG = '.tiktok-1ok4pbl-ButtonActionItem span[data-e2e=\"like-icon\"]'\nconst TIME_WAIT_PER_TASK = 2000\nlet startIndex = 0\nfunction getRandomInt(min, max){\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction runMyLikeNodemy(itemNodemy){\n  return new Promise(function(resolve, reject){\n    itemNodemy.parentElement.parentElement.parentElement.parentElement.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n    setTimeout(function(){\n      itemNodemy.click();\n      resolve()\n    }, getRandomInt(NODEMY_TIME_WATCH_VIDEO.min, NODEMY_TIME_WATCH_VIDEO.max))\n  })\n}\n\nasync function runTaskPerTime(time){\n  async function runAllNodemy(){\n    let nodemy = document.querySelectorAll(SELECTOR_TAG);\n    console.log('nodemy ',startIndex, nodemy.length)\n    for(startIndex; startIndex < nodemy.length ; startIndex++ ){\n      await runMyLikeNodemy(nodemy[startIndex])\n    }\n    // startIndex : bai viet bat dau like ,\n    startIndex = startIndex == 0 ? startIndex : nodemy.length\n  }\n\n  // wait TIME_WAIT_PER_TASK\n  await new Promise((resolve, reject)=>{\n    setTimeout(()=>{resolve()}, time)\n  })\n  await runAllNodemy()\n}\n\nasync function runLikeTopTop(){\n  for(let i = 0; i < 3; i++){\n    await runTaskPerTime(TIME_WAIT_PER_TASK)\n  }\n}\n\n// ========================================\n\n\n// Listen for message\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.type === 'COUNT') {\n    console.log('demo')\n    console.log(`Current count is ${request.payload.count}`);\n  }\n\n  console.log('nodemy requset', request)\n  if(request.type === 'RUNLIKE'){\n    console.log('nodemy LIKE')\n    runLikeTopTop()\n  }\n\n  // Send an empty response\n  // See https://github.com/mozilla/webextension-polyfill/issues/130#issuecomment-531531890\n  sendResponse({});\n  return true;\n});\n"],"names":[],"sourceRoot":""}